composer create-project laravel/laravel sohag
    npm install
    npm run dev

composer require barryvdh/laravel-dompdf https://github.com/barryvdh/laravel-dompdf
    return Pdf::loadFile(public_path().'/myfile.html')->save('/path-to/my_stored_file.pdf')->stream('download.pdf');
    Pdf::loadHTML($html)->setPaper('a4', 'landscape')->setWarnings(false)->save('myfile.pdf')
    Pdf::setOption(['dpi' => 150, 'defaultFont' => 'sans-serif']);
composer require barryvdh/laravel-debugbar --dev https://github.com/barryvdh/laravel-debugbar
composer require spatie/laravel-backup
php artisan vendor:publish --provider="Spatie\Backup\BackupServiceProvider"
    php artisan backup:list
    php artisan backup:run
composer require pavel-mironchik/laravel-backup-panel
    php artisan laravel-backup-panel:install
    php artisan vendor:publish --tag=laravel-backup-panel-assets --force
    php artisan vendor:publish --tag=laravel-backup-panel-views --force

php artisan stub:publish
php artisan make:model Book
php artisan tinker
    -->> NotDeleteable <<--
        $book = \App\Models\Book::first();
        $book->delete();
            --> Deleteable <<--
                ->cascadeOnDelete()
        
        $post = \App\Models\Post::first();
        $post->delete();
        

php artisan make:model Review -mcr
    $table->softDeletes();
    $user = User::factory()->trashed()->create(); 
php artisan make:seeder ReviewSeeder
php artisan make:factory ReviewFactory

php artisan migrate
php artisan migrate:fresh
    'user_type' => function (array $post) {
                return App\User::find($post['user_id'])->type;
    },

php artisan db:seed
    php artisan db:seed --class=UserSeeder
    php artisan migrate:fresh --seed
    php artisan migrate:fresh --seed --seeder=UserSeeder
    php artisan db:seed --force

php artisan schema:dump

if (Schema::hasTable('users')) {
    // The "users" table exists...
}

php artisan make:migration "create file manager table"

---------Import and Export using Laravel Excel-----------
Link > https://docs.laravel-excel.com/
composer require maatwebsite/excel

--THE "OLD" WAY WITH NO QUEUES/LIVEWIRE--
> App\Imports > Controller
php artisan make:import UsersImport --model=User 
php artisan make:export UsersExport --model=User

--THE "NEW" WAY WITH QUEUES/LIVEWIRE--
> App\Jobs > App\Http\Livewire
php artisan make:job UserExportJob
php artisan make:job UserImportJob
php artisan make:livewire import
php artisan make:livewire export
php artisan livewire:publish --config

php artisan queue:batches-table
php artisan migrate

php artisan make:request StoreUserRequest
php artisan make:request UpdateUserRequest

Cache::remember('table_name', now()->addMinutes(60*24), function () {
    //
});
php artisan make:observer UserObserver --model=User

Next---------------------------Step 
composer require spatie/laravel-permission

php artisan cache:clear
php artisan route:clear
php artisan config:clear
php artisan view:clear
php artisan optimize
